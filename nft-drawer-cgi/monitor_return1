#!/usr/bin/python3

import os

print('Content-Type: text/html\n')

query = os.getenv('QUERY_STRING') or ''
query = {k: v for k, v in map(lambda kv: kv.split('=') if '=' in kv else [kv, ''], query.split('&'))}

if 'address' in query:
    address = query['address']

    assert all(
        x.lower() in '0123456789abcdefghijklmnopqrstuvwxyz'
        for x in address
    )

    with os.popen('/srv/http/.local/bin/erdpy wallet bech32 --decode ' + address + ' 2>/dev/null', mode = 'r') as fd:
        hex_address = fd.read().strip()
else:
    address = 'unknown'
    hex_address = '<b><code>invalid</code></b>'

print('''
<html>
    <title>Transaction</title>
    <meta charset="utf-8"></meta>
    <body>
    </body>
    <script>
        const fetch = (callback, url) => {
            const xhr = new XMLHttpRequest()
            xhr.onreadystatechange = () => {
                if(xhr.readyState == 4)
                {
                    // console.log(xhr.responseText)
                    callback(xhr.responseText)
                }
                else
                {
                    callback("{}")
                }
            }
            xhr.open("GET", url, true)
            xhr.send()
        }

        const HEX_SET = "0123456789ABCDEF"

        const unhex = (hex_string) => {
            const ascii = []
            for(let i = 0; i < hex_string.length; i += 2)
            {
                const nibbles = hex_string.substr(i, 2)
                const high = HEX_SET.indexOf(nibbles[0].toUpperCase())
                const low= HEX_SET.indexOf(nibbles[1].toUpperCase())
                const codepoint = high * 16 + low
                const ch = String.fromCharCode(codepoint)
                ascii.push(ch)
            }
            return ascii.join("")
        }

        const TX_URL = "https://devnet-gateway.elrond.com/transaction/"

        const tx_hash = "''' + query['txHash'] + '''"
        const url = TX_URL + "''' + query['txHash'] + '''?withResults=true"

        document.body.onload = () => {
            let loop = true

            setInterval(() => {
                if(!loop)
                {
                    return
                }

                if(tx_hash.length == 0)
                {
                    loop = false
                }

                fetch((response) => {
                    const json = JSON.parse(response)
                    if(
                        json.data
                        && json.data.transaction
                        && json.data.transaction.smartContractResults
                    )
                    {
                        const data = json.data.transaction.smartContractResults[0].data
                        if(data.substr(0, 6).toLowerCase() != '@6f6b@')
                        {
                            document.body.innerHTML = (
                                "<p>Transaction failed. Please try again.</p>"
                                + "<input type='button' value='Close page' onclick='javascript:window.close()'></input>"
                            )
                        }
                        else
                        {
                            loop = false
                            const value = data.substr(6)
                            document.body.innerHTML = (
                                "<p>Wallet hex. address: <code>''' + hex_address + '''</code></p>"
                                // + "<p>Wallet bech32 address: <code>''' + address + '''</code></p>"
                                // + "<p>Transaction accepted, id: <code>" + tx_hash + "</code></p>"
                                + "<p>Returned data:</p>"
                                + "<p><code>" + unhex(value) + "</code></p>"
                                + "<input type='button' value='Close page' onclick='javascript:window.close()'></input>"
                            )
                        }
                    }
                }, url)
            }, 1000)
        }
    </script>
</html>
''')


